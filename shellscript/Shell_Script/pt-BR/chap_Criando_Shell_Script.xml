<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "Shell_Script.ent">
%BOOK_ENTITIES;
]>
<chapter id="chap-Shell_Script-Criando_Shell_Script">
	<title>Criação de um Shell Script</title>
	
	<para>
		Vamos então começar a criação dos nossos scripts utilizando comandos do nosso shell padrão, <replaceable>Bash</replaceable>, iniciando com elementos básicos de um shell script e ir complementando com comandos e exemplos práticos de nível intermediário e avançado. Conhecendo também os tipos de laços de repetição, controle de fluxos, redirecionamentos de saída de um comando para outro ou para um arquivo de log
	</para>

	<section>
		<title>Hello World</title>
		
		<para>
			Como exemplo de nosso primeiro shell script simples iremos utilizando o <command>echo</command> para ecoar uma frase em nosso terminal.
			<screen>$ echo 'Hello World!'
Hello World!
</screen>
		</para>
		
		<para>
			Seguindo o exemplo de utilização do comando <command>echo</command> acima, vamos transformá-lo em um shell script. Inicialmente devemos indicar no início do script qual será o interpretador de comandos que iremos utilizar. Como estamos utilizando o <replaceable>bash</replaceable> como shell padrão, iremos colocar "<replaceable>#!/bin/bash</replaceable>" na primeira linha do arquivo. O shell script de exemplo: <ulink url="https://github.com/mondoni/linuxcourse/blob/master/shellscript/exemplos/helloworld.sh">helloworld.sh</ulink>.
			
			<note>
				<title>Dica:</title>
				<para>
					Evite utilizar acentos, espaços e caracteres especiais nos nomes de scripts.
				</para>
			</note>

			<screen>$ vim helloworld.sh
#!/bin/bash
echo 'Hello World!'
</screen>
			</para>
			
			<para>
				Lembre-se de configurar a permissão de execução. E vamos executá-lo:
				
				<screen>$ chmod +x helloworld.sh
$ ./helloworld.sh
Hello World!</screen>
			</para>

			<note>
				<title>Nota:</title>
				<para>
					Seja qual for a linguagem a ser utilizada num script, sempre devemos indicar o interpretador de comandos adequadamente. Para um script em PHP utilizamos o interpretador "<replaceable>/usr/bin/php</replaceable>", para um script em Python utilizamos "<replaceable>/usr/bin/python</replaceable>", etc.
				</para>
			</note>
	
	</section>
	
	<section>
		<title>Variáveis</title>
		
		<para>
			Para quem conhece algum tipo de linguagem de programação já deve ter uma noção de como funciona esse processo. No <replaceable>bash</replaceable> não é muito diferente de outras linguagens de programação, aliás, ele é muito mais simples nesse quesito.
		</para>
		
		<para>
			Para a atribuição de valores a uma variável o <replaceable>bash</replaceable> segue o padrão <replaceable>variavel=valor</replaceable> e para acessar a variável com seu conteúdo devemos utilizar o cifrão($) seguido do nome da variável <replaceable>$variavel</replaceable>.
		</para>
		
		<para>
			Vamos copiar nosso script "<replaceable>helloworld.sh</replaceable>" para "<replaceable>helloworld-var.sh</replaceable>" e alterá-lo para que a mensagem esteja atribuída à uma variável.
			<screen>$ vim helloworld-var.sh
#!/bin/bash
msg='Hello World!'
echo $msg

$ ./helloworld.sh
Hello World!
</screen>
		</para>
		
		<para>
			Outro exemplo de utilização de variáveis contendo textos:
			
			<screen>$ vim chaves.sh
#!/bin/bash

msg='Foi sem querer, querendo!'

echo "A frase que o Chaves mais fala no seriado é: \"$msg\""

# ./chaves
A frase que o Chaves mais fala no seriado é: "Foi sem querer, querendo!"
</screen>
		</para>
	</section>
	

</chapter>
